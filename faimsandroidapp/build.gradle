apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def modulePropertiesFile = rootProject.file("module.properties")
def moduleProperties = new Properties()
if (modulePropertiesFile.isFile()) {
    moduleProperties.load(new FileInputStream(modulePropertiesFile))
} else {
    moduleProperties.setProperty("server", "null")
    moduleProperties.setProperty("port", "null")
    moduleProperties.setProperty("key", "null")
    moduleProperties.setProperty("appname", "\"FAIMS\"")
    moduleProperties.setProperty("appid", "au.edu.faims.mq.fieldresearch2")

}

def publish = project.tasks.create("publishAll")
android.applicationVariants.all { variant ->
    if (variant.buildType.name.equals("release") || variant.buildType.name.equals("debug")) {
        File outDir = file("${rootDir}/apks")
        File apkFile = variant.outputs[0].outputFile
        File mapFile = variant.mappingFile

        def task = project.tasks.create("publish${variant.name.capitalize()}Apk", Copy)
        task.from apkFile, mapFile
        task.into outDir
//        task.rename "mapping.txt", "${apkFile.name.substring(0, apkFile.name.length() - 3)}mapping.txt"
        task.doLast{
            println ">>>publish ${variant.name} success!" +
                    "\ndir: ${outDir}" +
                    "\napk: ${apkFile.name}"
        }

        task.dependsOn variant.assemble
        publish.dependsOn task
    }
}


android {
    signingConfigs {
        faims25 {
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
        }
    }
    compileSdkVersion 17
    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId moduleProperties['appid']
        minSdkVersion 15
        targetSdkVersion 19
        setProperty("archivesBaseName", "faims-$applicationId")
        testApplicationId 'au.edu.faims.mq.fieldresearch2.test'
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }
    buildTypes {
        release {
            buildConfigField "String", "COMMUNITY_SERVER", moduleProperties['server']
            buildConfigField "String", "COMMUNITY_PORT", moduleProperties['port']
            buildConfigField "String", "COMMUNITY_MODULE", moduleProperties['key']
            buildConfigField "String", "COMMUNITY_APPNAME", moduleProperties['appname']
            resValue "string", "app_name", moduleProperties['appname']
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.faims25
        }
        debug {
            buildConfigField "String", "COMMUNITY_SERVER", moduleProperties['server']
            buildConfigField "String", "COMMUNITY_PORT", moduleProperties['port']
            buildConfigField "String", "COMMUNITY_MODULE", moduleProperties['key']
            buildConfigField "String", "COMMUNITY_APPNAME", moduleProperties['appname']
            resValue "string", "app_name", moduleProperties['appname']
            signingConfig signingConfigs.faims25
        }
    }
    packagingOptions {
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/DEPENDENCIES'
    }
    productFlavors {
    }
}

dependencies {
    compile project(':androidcodescanner')
    compile files('libs/android-support-v4.jar')
    compile files('libs/antlr-4.4-complete.jar')
    compile files('libs/apache-mime4j-core-0.7.2.jar')
    compile files('libs/bsh-2.0b4.jar')
    compile files('libs/commons-codec-1.7.jar')
    compile files('libs/commons-compress-1.6.jar')
    compile files('libs/guice-2.0-no_aop.jar')
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5.1'
    //    compile files('libs/httpclient-4.5.2.jar')

    //    compile files('libs/httpcore-4.4.4.jar')

    //    compile files('libs/httpmime-4.5.2.jar')
    compile 'org.apache.httpcomponents:httpmime:4.3.6'
    compile files('libs/javaproj-1.0.6-noawt.jar')
    compile files('libs/javarosa-libraries.jar')
    compile files('libs/jmustache-1.5.jar')
    compile files('libs/jsr305-1.3.9.jar')
    compile files('libs/jts-1.13.jar')
    compile files('libs/kxml2-2.2.2.jar')
    compile files('libs/mapsforge-map-0.3.0-jar-with-dependencies.jar')
    compile files('libs/marineapi.jar')
    compile files('libs/nativecss.jar')
    compile files('libs/nutiteq-3d-sdk-2.1.0.jar')
    compile files('libs/protobuf-java-2.4.1-lite.jar')
    compile files('libs/roboguice-2.0.jar')
    compile files('libs/slf4j-android-1.6.1-RC1.jar')
    androidTestCompile files('libs/gson-2.2.3.jar')
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.5.3'
    //    androidTestCompile fileTree(dir: 'libs', include: ['robotium-solo-5.5.3.jar'])
    compile project(':androidfilechooser')
}
